services:
  api-server:
    build: ./api
    container_name: api-server
    ports:
      - "8080:8080"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - PATH=/usr/local/bin:${PATH}

  renderer-server:
    build: ./renderer
    container_name: renderer-server
    ports:
      - "8081:8081"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - PATH=/usr/local/bin:${PATH}

  youtube-metadata-server:
    build: ./youtube-metadata
    container_name: youtube-metadata-server
    ports:
      - "6060:6060"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - PATH=/usr/local/bin:${PATH}

  youtube-transcript-py-server:
    build: ./youtube-transcript-py
    container_name: youtube-transcript-py-server
    ports:
      - "5050:5050"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - FLASK_ENV=production

  llm-model:
    build: ./llm-model
    container_name: llm-model
    ports:
      - "3030:3030"
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - DEFAULT_LLM=gemini-2.5-flash
    volumes:
      - ./llm-model/prompts:/app/prompts # Mount local prompts folder
    deploy:
      resources:
        limits:
          cpus: "1.0" # Máximo 1 vCPU
          memory: 512M # Máximo 512MB RAM
        reservations:
          cpus: "0.5" # Reserva 50% de 1 vCPU
          memory: 256M # Reserva 256MB RAM
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    env_file:
      - .env
    volumes:
      - ./api/nginx/api-dev.conf.template:/etc/nginx/conf.d/api-dev.conf.template
      - ./api/nginx/api-prod.conf.template:/etc/nginx/conf.d/api-prod.conf.template
      - ./api/nginx/ssl.conf.template:/etc/nginx/conf.d/ssl.conf.template
      - ./renderer/nginx/renderer-dev.conf.template:/etc/nginx/conf.d/renderer-dev.conf.template
      - ./renderer/nginx/renderer-prod.conf.template:/etc/nginx/conf.d/renderer-prod.conf.template
      - ./renderer/nginx/renderer-ssl.conf.template:/etc/nginx/conf.d/renderer-ssl.conf.template
      - ./youtube-transcript-py/nginx/transcript-py.conf.template:/etc/nginx/conf.d/transcript-py.conf.template
      - ./youtube-metadata/nginx/youtube-metadata.conf.template:/etc/nginx/conf.d/youtube-metadata.conf.template
      - ./nginx/docker-entrypoint.sh:/docker-entrypoint.sh
      - ./renderer/static:/app/static
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - /dev/null:/etc/nginx/conf.d/default.conf
    entrypoint: ["/docker-entrypoint.sh"]
    depends_on:
      - api-server
      - renderer-server
      - youtube-transcript-py-server
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    deploy:
      resources:
        limits:
          cpus: "0.5" # Limit to 50% of one CPU core
          memory: 512M # Limit to 512MB of RAM
    container_name: certbot
    env_file:
      - .env
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./renderer/static:/app/static
      - ./certbot/cert-entrypoint.sh:/cert-entrypoint.sh
    entrypoint: ["/cert-entrypoint.sh"]
    depends_on:
      - nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
